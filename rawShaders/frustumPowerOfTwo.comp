#version 450

struct Pair {
  // x == first, y == second, z == dist2, w == islandId
  uvec4 data;
};

layout(std140, set = 0, binding = 0) buffer OutData {
  uvec4 count;
  Pair pairs[];
};

#define workGroupSize 256
layout (local_size_x = workGroupSize, local_size_y = 1, local_size_z = 1) in;

void main() {
  const uint threadCount = gl_WorkGroupSize.x;

  uint v = count.x; // compute the next highest power of 2 of 32-bit v
  v--;
  v |= v >> 1;
  v |= v >> 2;
  v |= v >> 4;
  v |= v >> 8;
  v |= v >> 16;
  v++;

  barrier();

  count.w = v;

  const uint countPowerOfTwo = v - count.x;
  const uint passCount2 = (countPowerOfTwo + threadCount - 1) / threadCount;
  for (uint i = 0; i < passCount2; ++i) {
    const uint index = i * threadCount + gl_LocalInvocationIndex;
    if (index >= countPowerOfTwo) continue;

    pairs[index + count.x].data.x = 0xFFFFFFFF;
    pairs[index + count.x].data.y = 0xFFFFFFFF;
    pairs[index + count.x].data.z = 0;
    pairs[index + count.x].data.w = 0xFFFFFFFF;
  }
}
